plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '6.16.0'
	id 'com.google.protobuf' version '0.9.2'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.9")
}

dependencies {
	implementation project(":proto")

	// gRPC
	implementation 'net.devh:grpc-spring-boot-starter:2.13.1.RELEASE'

	// protobuf
	implementation 'com.google.protobuf:protobuf-java:3.22.2'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner:4.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// kafka
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

	// swagger
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// openfeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-jackson:13.2.1'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		target("**/*.java")
		targetExclude("**/SecurityConfig.java", "**/SwaggerConfiguration.java", "**/generated/**")
		googleJavaFormat().aosp()  // 구글 자바 포맷 적용
		importOrder()  // import 순서 정의
		removeUnusedImports()   // 사용하지 않는 import 제거
		trimTrailingWhitespace()   // 공백 제거
		endWithNewline()  // 끝부분 New Line 처리
	}
}

task copyPrivate(type: Copy) {
	copy {
		from '../mooding_back_submodule'
		include "application-payment-*.yml"
		into 'src/main/resources'
	}
}

sourceSets {
	src {
		main {
			java {
				srcDirs 'build/generated/source/proto/main/grpc'
				srcDirs 'build/generated/source/proto/main/java'
			}
		}
	}
}

def grpcVersion = '1.42.1'

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.12.2'
	}

	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}
